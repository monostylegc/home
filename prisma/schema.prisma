// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          Role      @default(USER)
  accounts      Account[]
  sessions      Session[]
}

enum Role {
  ADMIN
  DOCTOR 
  USER
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Doctor {
  id            Int @id @default(autoincrement())
  name          String
  part          String
  description   String
  carriers      Carrier[]
  workSchedule  WorkSchedule?
  offDay        OffDay?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt 
}

model Carrier{
  id            Int @id @default(autoincrement())
  title         String
  date          DateTime?
  doctor        Doctor @relation(fields: [doctorId], references: [id], onDelete: Cascade )
  doctorId      Int @unique
}

model WorkSchedule {
  id            Int @id @default(autoincrement())
  doctor        Doctor @relation(fields: [doctorId], references: [id], onDelete: Cascade)
  doctorId      Int @unique
  monAm         Boolean
  monPm         Boolean
  tueAm         Boolean
  tuePm         Boolean
  wedAm         Boolean
  wedPm         Boolean
  thrAm         Boolean
  thrPm         Boolean
  friAm         Boolean
  friPm         Boolean
  satAm         Boolean
}

model OffDay{
  id            Int @id @default(autoincrement())
  doctor        Doctor @relation(fields: [doctorId], references: [id], onDelete: Cascade)
  doctorId      Int @unique
  date0         DateTime?
  date1         DateTime?
  date2         DateTime?
  date3         DateTime?
  date4         DateTime?
  date5         DateTime?
  date6         DateTime?
  date7         DateTime?
  date8         DateTime?
  date9         DateTime?
}

model DiseaseInfo {
  id Int @id @default(autoincrement())
  title String
  category String
  thumbnailUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content String @db.LongText
}

model TreatmentInfo {
  id Int @id @default(autoincrement())
  title String
  category String
  thumbnailUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content String @db.LongText
}

model HealthInfo {
  id Int @id @default(autoincrement())
  title String
  thumbnailUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content String @db.LongText
}